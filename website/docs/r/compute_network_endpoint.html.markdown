---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_compute_network_endpoint"
sidebar_current: "docs-google-compute-network-endpoint"
description: |-
  A Network endpoint represents a IP address and port combination that is
  part of a specific network endpoint group (NEG).
---

# google\_compute\_network\_endpoint

A Network endpoint represents a IP address and port combination that is
part of a specific network endpoint group (NEG). NEGs are zonals
collection of these endpoints for GCP resources within a
single subnet. **NOTE**: Network endpoints cannot be created outside of a
network endpoint group.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/provider_versions.html) for more details on beta resources.

To get more information about NetworkEndpoint, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/load-balancing/docs/negs/)

## Example Usage - Network Endpoint


```hcl
resource "google_compute_network_endpoint" "default-endpoint {
  provider               = "google-beta"

  network_endpoint_group = "${google_compute_network_endpoint_group.neg.name}"

  instance    = "${google_compute_instance.endpoint-instance.name}"
  port        = "${google_compute_network_endpoint_group.neg.default_port}"
  ip_address  = "${google_compute_instance.endpoint-instance.network_interface.0.network_ip}"
}

data "google_compute_image" "my_image" {
  family  = "debian-9"
  project = "debian-cloud"
}

resource "google_compute_instance" "endpoint-instance" {
  name         =  "endpoint-instance"
  machine_type = "n1-standard-1"

  boot_disk {
    initialize_params{
      image = "${data.google_compute_image.my_image.self_link}"
    }
  }

  network_interface {
    subnetwork = "${google_compute_subnetwork.default.self_link}"
    access_config { }
  }
}

resource "google_compute_network_endpoint_group" "group" {
  provider = "google-beta"

  name         = "my-lb-neg"
  network      = "${google_compute_network.default.self_link}"
  subnetwork   = "${google_compute_subnetwork.default.self_link}"
  default_port = "90"
  zone         = "us-central1-a"
}

resource "google_compute_network" "default" {
  provider = "google-beta"

  name = "neg-network"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "default" {
  provider = "google-beta"

  name          = "neg-subnetwork"
  ip_cidr_range = "10.0.0.1/16"
  region        = "us-central1"
  network       = "${google_compute_network.default.self_link}"
}
```

## Argument Reference

The following arguments are supported:


* `instance` -
  (Required)
  The name for a specific VM instance that the IP address belongs to.
  This is required for network endpoints of type GCE_VM_IP_PORT.
  The instance must be in the same zone of network endpoint group.

* `port` -
  (Required)
  Optional port number of network endpoint. If not specified and the
  NetworkEndpointGroup.network_endpoint_type is GCE_IP_PORT,
  the defaultPort for the network endpoint group will be used.

* `ip_address` -
  (Required)
  Optional IPv4 address of network endpoint. The IP address must belong
  to a VM in GCE (either the primary IP or as part of an aliased IP
  range). If the IP address is not specified, then the primary IP
  address for the VM instance in the network that the network endpoint
  group belongs to will be used.

* `network_endpoint_group` -
  (Required)
  The network endpoint group this endpoint is part of.


- - -


* `zone` -
  (Optional)
  Zone where the containing network endpoint group is located.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `health_backend_service` -
  URL of the backend service associated with the health state of the
  network endpoint.

* `health_check` -
  URL of the health check associated with the health state of the
  network endpoint.

* `health_forwarding_rule` -
  URL of the forwarding rule associated with the health state of the
  network endpoint.

* `health_state` -
  Health state of the network endpoint determined based on the health
  checks configured.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

NetworkEndpoint can be imported using any of these accepted formats:

```
$ terraform import -provider=google-beta google_compute_network_endpoint.default projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/{{name}}
$ terraform import -provider=google-beta google_compute_network_endpoint.default {{project}}/{{zone}}/{{network_endpoint_group}}/{{instance}}/{{ip_address}}/{{port}}
$ terraform import -provider=google-beta google_compute_network_endpoint.default {{project}}/{{zone}}/{{network_endpoint_group}}/{{name}}
$ terraform import -provider=google-beta google_compute_network_endpoint.default {{network_endpoint_group}}/{{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
