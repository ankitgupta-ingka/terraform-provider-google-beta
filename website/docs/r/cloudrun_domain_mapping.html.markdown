---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
layout: "google"
page_title: "Google: google_cloudrun_domain_mapping"
sidebar_current: "docs-google-cloudrun-domain-mapping"
description: |-
  Resource to hold the state and status of a user's domain mapping.
---

# google\_cloudrun\_domain\_mapping

Resource to hold the state and status of a user's domain mapping.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/provider_versions.html) for more details on beta resources.

To get more information about DomainMapping, see:

* [API documentation](https://cloud.google.com/run/docs/reference/rest/v1beta1/projects.locations.domainmappings)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/run/docs/mapping-custom-domains)

## Argument Reference

The following arguments are supported:


* `location` -
  (Required)
  The location of the cloud run instance. eg us-central1


- - -


* `api_version` -
  (Optional)
  The API version for this call such as "serving.knative.dev/v1beta1".

* `spec` -
  (Optional)
  The spec for this DomainMapping.  Structure is documented below.

* `metadata` -
  (Optional)
  Metadata associated with this BuildTemplate.  Structure is documented below.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


The `spec` block supports:

* `force_override` -
  (Optional)
  If set, the mapping will override any mapping set before this spec was set.
  It is recommended that the user leaves this empty to receive an error
  warning about a potential conflict and only set it once the respective UI
  has given such a warning.

* `route_name` -
  (Optional)
  The name of the Knative Route that this DomainMapping applies to.
  The route must exist.

* `certificate_mode` -
  (Optional)
  The mode of the certificate.

The `metadata` block supports:

* `labels` -
  (Optional)
  Map of string keys and values that can be used to organize and categorize
  (scope and select) objects. May match selectors of replication controllers
  and routes.
  More info: http://kubernetes.io/docs/user-guide/labels

* `generation` -
  A sequence number representing a specific generation of the desired state.
  Populated by the system. Read-only.

* `resource_version` -
  An opaque value that represents the internal version of this object that
  can be used by clients to determine when objects have changed. May be used
  for optimistic concurrency, change detection, and the watch operation on a
  resource or set of resources. Clients must treat these values as opaque and
  passed unmodified back to the server. They may only be valid for a
  particular resource or set of resources.
  Populated by the system.
  Read-only.
  Value must be treated as opaque by clients and .
  More info:
  https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency

* `self_link` -
  SelfLink is a URL representing this object.
  Populated by the system.
  Read-only.
   string selfLink = 4;

* `uid` -
  UID is the unique in time and space value for this object. It is typically
  generated by the server on successful creation of a resource and is not
  allowed to change on PUT operations.
  Populated by the system.
  Read-only.
  More info: http://kubernetes.io/docs/user-guide/identifiers#uids

* `namespace` -
  (Required)
  Namespace defines the space within each name must be unique, within a
  Cloud Run region. In Cloud Run the namespace must be equal to either the
  project ID or project number.

* `annotations` -
  (Optional)
  Annotations is an unstructured key value map stored with a resource that
  may be set by external tools to store and retrieve arbitrary metadata. They
  are not queryable and should be preserved when modifying objects. More
  info: http://kubernetes.io/docs/user-guide/annotations

* `name` -
  (Required)
  Name must be unique within a namespace, within a Cloud Run region.
  Is required when creating
  resources, although some resources may allow a client to request the
  generation of an appropriate name automatically. Name is primarily intended
  for creation idempotence and configuration definition. Cannot be updated.
  More info: http://kubernetes.io/docs/user-guide/identifiers#names

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:


* `status` -
  The current status of the DomainMapping.  Structure is documented below.


The `status` block contains:

* `conditions` -
  Array of observed DomainMappingConditions, indicating the current state
  of the DomainMapping.  Structure is documented below.

* `observed_generation` -
  (Optional)
  ObservedGeneration is the 'Generation' of the DomainMapping that
  was last processed by the controller.
  Clients polling for completed reconciliation should poll until
  observedGeneration = metadata.generation and the Ready condition's status
  is True or False.

* `resource_records` -
  (Optional)
  The resource records required to configure this domain mapping. These
  records must be added to the domain's DNS configuration in order to
  serve the application via this domain mapping.  Structure is documented below.

* `mapped_route_name` -
  (Optional)
  The name of the route that the mapping currently points to.


The `conditions` block contains:

* `message` -
  Human readable message indicating details about the current status.

* `status` -
  Status of the condition, one of True, False, Unknown.

* `reason` -
  One-word CamelCase reason for the condition's current status.

* `type` -
  Type of domain mapping condition.

The `resource_records` block supports:

* `type` -
  (Optional)
  Resource record type. Example: `AAAA`.

* `rrdata` -
  (Optional)
  Data for this record. Values vary by record type, as defined in RFC 1035
  (section 5) and RFC 1034 (section 3.6.1).

* `name` -
  (Optional)
  Relative name of the object affected by this record. Only applicable for
  `CNAME` records. Example: 'www'.

## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

DomainMapping can be imported using any of these accepted formats:

```
$ terraform import -provider=google-beta google_cloudrun_domain_mapping.default projects/{{project}}/locations/{{location}}/domainmappings/{{name}}
$ terraform import -provider=google-beta google_cloudrun_domain_mapping.default {{project}}/{{location}}/{{name}}
$ terraform import -provider=google-beta google_cloudrun_domain_mapping.default {{location}}/{{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.
